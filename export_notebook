#!/usr/bin/env python

import sys
from subprocess import check_output
import hashlib
from os import path

import string

def isprintable(x):
  return x in string.printable

def toprintable(x):
  return filter(isprintable, x)

def hashfile(afile, hasher, blocksize=65536):
  buf = afile.read(blocksize)
  while len(buf) > 0:
    hasher.update(buf)
    buf = afile.read(blocksize)
  return hasher.hexdigest()

input_file = sys.argv[1]
input_hash = hashfile(open(input_file, 'rb'), hashlib.md5())
output_file = input_file.replace('.ipynb', '.py')
if path.exists(output_file):
  with open(output_file) as outfile:
    file_head = [next(outfile).strip() for i in range(3)]
  if '# md5: ' + input_hash in file_head:
    #print 'no need to export'
    sys.exit()

pyfile = check_output('jupyter nbconvert --to python ' + sys.argv[1] + ' --stdout | 
filter_nbconvert_export', shell=True)
pyfile = '#!/usr/bin/env python\n# md5: ' + input_hash + '\n' + pyfile
open(output_file, 'w').write(pyfile)
